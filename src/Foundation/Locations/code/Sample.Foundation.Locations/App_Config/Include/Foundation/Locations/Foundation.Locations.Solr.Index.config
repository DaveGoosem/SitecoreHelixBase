<?xml version="1.0" encoding="utf-8"?>
<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/" xmlns:role="http://www.sitecore.net/xmlconfig/role/" xmlns:search="http://www.sitecore.net/xmlconfig/search/">
  <sitecore role:require="Standalone or ContentDelivery or ContentManagement" search:require="solr">
    <contentSearch>
      <configuration type="Sitecore.ContentSearch.ContentSearchConfiguration, Sitecore.ContentSearch">
        <indexes hint="list:AddIndex">
          <index id="sample_locations_index_web" type="Sitecore.ContentSearch.SolrProvider.SolrSearchIndex, Sitecore.ContentSearch.SolrProvider">
            <param desc="name">$(id)</param>
            <param desc="core">Sample_locations_index_web</param>
            <param desc="propertyStore" ref="contentSearch/indexConfigurations/databasePropertyStore" param1="$(id)" />
            <configuration ref="contentSearch/indexConfigurations/defaultSolrIndexConfiguration">

              <documentOptions ref="contentSearch/indexConfigurations/defaultSolrIndexConfiguration/documentOptions">
                <!-- 
                This flag will index all fields by default. This allows new fields in your templates to automatically be included into the index.
                You have two choices : 

                1) Set this to true and place all the fields you would like to remove in the 'ExcludeField' list below.
                2) Set to false and place all fields you would like to be indexed in the 'IncludeField' list below.
                -->
                <indexAllFields>false</indexAllFields>

                <!-- 
                GLOBALLY INCLUDE FIELDS IN INDEX
                This setting allows you to specify which fields to include in the index when the indexAllFields setting is set to false.
                -->
                <include hint="list:AddIncludedField">

                  <!--Country Details-->
                  <CountryNameField>{558A399F-42DE-4188-B74A-733A20A145F7}</CountryNameField>
                  <CountryISO2Field>{00599C16-3F1E-4BC9-B527-9BD1E16DCBEE}</CountryISO2Field>
                  <CountryISO3Field>{0B59A1D6-3547-4E37-924C-B03ACFE415E1}</CountryISO3Field>

                  <!--Location Details-->
                  <LatitudeField>{A1C43F11-B3A8-4281-B33D-52BAFF802685}</LatitudeField>
                  <LongitudeField>{142A68EB-6950-47BA-9F0E-23275F3E25EE}</LongitudeField>
                  <CountryField>{8A817C6E-ACE2-4ACB-887F-F44EA41B1C5A}</CountryField>
                  <StateField>{042B6A31-DBDB-431E-9D08-E5ADFAD1551B}</StateField>
                  <SuburbField>{2E9E0F09-BA5E-464C-8B30-E4E1F2F02317}</SuburbField>
                  <PostcodeField>{D5CAE13D-3B61-426E-8C35-8E9E8177DBB5}</PostcodeField>
                  <AddressField>{A46AB4D3-E668-4478-BEB6-DBA7B368878E}</AddressField>                  

                </include>

                <!--<fields hint="raw:AddComputedIndexField">                  
                </fields>-->

                <!-- Templates indexable by this config -->
                <include hint="list:AddIncludedTemplate">
                  <CountryTemplate>{61DD9945-D88D-4E06-8413-6BE15099B379}</CountryTemplate>
                  <LocationTemplate>{D7CCA97C-60F3-49B0-A3A3-4E5E521918E9}</LocationTemplate>
                </include>
              </documentOptions>

              <!-- Should index Initialize() method be called as soon as the index is added or wait for an external trigger -->
              <!-- For Solr Initialize() needs to be called after the IOC container has fired up -->
              <initializeOnAdd>false</initializeOnAdd>

              <fieldMap ref="contentSearch/indexConfigurations/defaultSolrIndexConfiguration/fieldMap">
                <typeMatches hint="raw:AddTypeMatch">
                  <typeMatch typeName="text" type="System.String" fieldNameFormat="{0}_t" cultureFormat="_{1}" settingType="Sitecore.ContentSearch.SolrProvider.SolrSearchFieldConfiguration, Sitecore.ContentSearch.SolrProvider" />
                  <typeMatch typeName="string" type="System.String" fieldNameFormat="{0}_s" settingType="Sitecore.ContentSearch.SolrProvider.SolrSearchFieldConfiguration, Sitecore.ContentSearch.SolrProvider" />
                  <typeMatch type="System.Collections.Generic.List`1[System.String]" typeName="stringCollection" fieldNameFormat="{0}_sm" multiValued="true" settingType="Sitecore.ContentSearch.SolrProvider.SolrSearchFieldConfiguration, Sitecore.ContentSearch.SolrProvider"/>
                </typeMatches>
              </fieldMap>
              <!-- **** Inherited default configuration **** -->
              <fieldReaders ref="contentSearch/indexConfigurations/defaultSolrIndexConfiguration/fieldReaders" />
              <indexFieldStorageValueFormatter ref="contentSearch/indexConfigurations/defaultSolrIndexConfiguration/indexFieldStorageValueFormatter" />
              <indexDocumentPropertyMapper ref="contentSearch/indexConfigurations/defaultSolrIndexConfiguration/indexDocumentPropertyMapper" />
              <documentBuilderType ref="contentSearch/indexConfigurations/defaultSolrIndexConfiguration/documentBuilderType" />
            </configuration>
            <strategies hint="list:AddStrategy">
              <strategy ref="contentSearch/indexConfigurations/indexUpdateStrategies/onPublishEndAsyncSingleInstance" />
            </strategies>
            <locations hint="list:AddCrawler">
              <CentresBucketCrawler type="Sitecore.ContentSearch.SitecoreItemCrawler, Sitecore.ContentSearch">
                <Database>web</Database>
                <Root>/sitecore/content/Global Content/Locations/Australian Locations</Root>
              </CentresBucketCrawler>
            </locations>
            <enableItemLanguageFallback>false</enableItemLanguageFallback>
            <enableFieldLanguageFallback>false</enableFieldLanguageFallback>
          </index>
        </indexes>
      </configuration>
    </contentSearch>
  </sitecore>
</configuration>
